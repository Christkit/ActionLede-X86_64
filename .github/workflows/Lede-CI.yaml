name: 编译OpenWrt系统

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH Action'
        required: false
        default: 'false'
  schedule:
    - cron: 30 4 * * 1,5

env: 
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: config/feeds.conf.default
  CONFIG_FILE: config/.config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu:latest

    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 创建环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential bc clang flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils python3-pyelftools libpython3-dev rsync unzip zlib1g-dev swig aria2 jq subversion qemu-utils ccache rename libelf-dev device-tree-compiler libgnutls28-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /lede
        sudo chown $USER:$GROUPS /lede

    # - name: 创建环境
    #   env:
    #     DEBIAN_FRONTEND: noninteractive
    #   run: |
    #     sudo -E apt-get -qq update
    #     sudo -E apt-get upgrade -y
    #     sudo -E apt-get -y install ack bc antlr3 aria2 lm-sensors asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
    #     sudo timedatectl set-timezone "$TZ"
    #     sudo mkdir -p /lede
    #     sudo chown $USER:$GROUPS /lede

    - name: 下载Lede源码
      working-directory: /lede
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /lede/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 覆写插件配置
      run: |
        [ -e $FEEDS_CONF ] && cp -f $FEEDS_CONF /lede/openwrt/feeds.conf.default
        cd /lede/openwrt
        make defconfig
        du -h /lede/openwrt/.config

    - name: 覆写插件配置
      run: |
        [ -e $CONFIG_FILE ] && cp -f $CONFIG_FILE /lede/openwrt/.config

    - name: 更新插件库
      run: | 
        cd /lede/openwrt && ./scripts/feeds update -a

    - name: 安装插件库
      run: | 
        cd /lede/openwrt && ./scripts/feeds install -a

    # - name: 编译插件库
    #   id: package
    #   run: |
    #     cd /lede/openwrt
    #     make download -j8
    #     find dl -size -1024c -exec ls -l {} \;
    #     find dl -size -1024c -exec rm -f {} \;

    # - name: 完成默认配置
    #   run: |
    #     cd /lede/openwrt
    #     make -j1 V=s

    - name: 完成自定义固件
      run: |
        cd /lede/openwrt
        make -j1 V=s

    - name: 上传固件
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_firmware
        path: /lede/openwrt/bin/targets/*/*
